name: Build

on:
  push:
    tags-ignore:
      - '*'
    branches: 
      - '**'

env:
  PACKAGE_NAME: '@oysteinvesth/gh-actions-workflows'
  MAIN_BRANCH: main
  DEFAULT_BUMP: minor
  INITIAL_VERSION: v1.0.0

jobs:
  build:
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      deploy_branch: ${{ steps.deploy_branch.outputs.deploy_branch }}
      is_main_branch: ${{ steps.main_branch.outputs.is_main }}
      tag: ${{ steps.new_tag.outputs.new_tag }}
    steps:
    - uses: actions/checkout@v2

    - id: deploy_branch
      if: github.ref != format('refs/heads/{0}', env.MAIN_BRANCH)
      name: Deploy branch?
      run: echo "::set-output name=deploy_branch::${{ contains(github.event.head_commit.message, '#deploy_branch') && 'true' || 'false' }}"

    - id: main_branch
      if: github.ref == format('refs/heads/{0}', env.MAIN_BRANCH)
      run: echo "::set-output name=is_main::${{ 'true' }}"

    - name: Create branch suffix
      if: github.ref != format('refs/heads/{0}', env.MAIN_BRANCH)
      id: branch_tag
      run: echo "::set-output name=suffix::$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9]/-/g')"

    - name: Setup
      uses: actions/setup-node@v2
      with:
        node-version: 16
        registry-url: https://npm.pkg.github.com/

    - name: Create next version
      id: new_tag
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DRY_RUN: true
        DEFAULT_BUMP: ${{ env.DEFAULT_BUMP }}
        RELEASE_BRANCHES: ${{ env.MAIN_BRANCH }}
        
    - name: Push tag
      if: github.ref == format('refs/heads/{0}', env.MAIN_BRANCH)
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        CUSTOM_TAG: ${{ steps.new_tag.outputs.new_tag }}

    - name: Version
      run: npm --no-git-tag-version version from-git

    - name: Version prerelease
      if: steps.deploy_branch.outputs.deploy_branch
      run: npm --no-git-tag-version version prerelease --preid=${{ steps.branch_tag.outputs.suffix }} --force

    - name: Pack
      run: npm pack

    - uses: actions/upload-artifact@v2
      with:
        path: ./*.tgz
        
  beta_branch:
    needs: build
    if: needs.build.outputs.deploy_branch == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
    - name: Setup
      uses: actions/setup-node@v2
      with:
        node-version: 16
        registry-url: https://npm.pkg.github.com

    - uses: actions/download-artifact@v2
      with:
        name: artifact

    - name: Publish
      run: npm publish *.tgz --tag beta
      env: 
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  beta:
    needs: build
    if: needs.build.outputs.is_main_branch == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
    - name: Setup
      uses: actions/setup-node@v2
      with:
        node-version: 16
        registry-url: https://npm.pkg.github.com

    - uses: actions/download-artifact@v2
      with:
        name: artifact

    - name: Publish
      run: npm publish *.tgz --tag beta
      env: 
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  prod:
    needs: [build, beta]
    runs-on: ubuntu-latest
    if: needs.build.outputs.is_main_branch == 'true'
    environment: prod
    permissions:
      packages: write
    steps:
    - name: Setup
      uses: actions/setup-node@v2
      with:
        node-version: 16
        registry-url: https://npm.pkg.github.com

    - name: Promote
      run: |
        npm dist-tag add ${{ env.PACKAGE_NAME }}@$(echo ${{ needs.build.outputs.tag }} | sed -e s/v//) latest
      env: 
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}